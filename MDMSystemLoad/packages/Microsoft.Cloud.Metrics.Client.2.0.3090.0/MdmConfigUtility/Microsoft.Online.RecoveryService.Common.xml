<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Online.RecoveryService.Common</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Online.RecoveryService.Common.Actors.IHealthQueryActor">
            <summary>
            The interface of the actor querying persisted health stores.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IHealthQueryActor.GetWatchdogRawDataAsync(System.Byte[],System.String,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Get the data from persisted store for resource/watchdog.
            </summary>
            <param name="resourceId">The resource Id.</param>
            <param name="watchdogName">The name of the watchdog.</param>
            <param name="accountName">The account name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="connectionString">The storage connection string.</param>
            <param name="storeType">The store type.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>The data for the time range.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IHealthQueryActor.GetWatchdogTransitionDataAsync(System.UInt32,System.Nullable{System.UInt32},System.String,System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Get the transition data from persisted store for resource/watchdog.
            </summary>
            <param name="resourceId">The resource Id.</param>
            <param name="watchdogName">The name of the watchdog.</param>
            <param name="accountName">The account name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="connectionString">The storage connection string.</param>
            <param name="storeType">The store type.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>The data for the time range.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IHealthQueryActor.GetResourceRawDataAsync(System.Byte[],System.String,System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Get the data from persisted store for resource.
            </summary>
            <param name="resourceId">The resource Id.</param>
            <param name="accountName">The account name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="connectionString">The storage connection string.</param>
            <param name="storeType">The store type.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>The data for the time range.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IHealthQueryActor.GetResourceTransitionDataAsync(System.UInt32,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Get the transition data from persisted store for resource.
            </summary>
            <param name="resourceId">The resource Id.</param>
            <param name="accountName">The account name.</param>
            <param name="partitionName">The partition name.</param>
            <param name="connectionString">The storage connection string.</param>
            <param name="storeType">The store type.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns>The data for the time range.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor">
            <summary>
            The interface of the actor managing incidents.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.IsRunning">
            <summary>
            Get a value indicating if the Actor is currently running.
            </summary>
            <returns>
            The value indicating if the Actor is running.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.EnrichIncident(System.String,System.Guid,System.Byte[])">
            <summary>
            Enriches the incident
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="incidentCorrelation">The incident correlation Id.</param>
            <param name="incidentRequest">The serialized pre-create incident request.</param>
            <returns>
            The enriched incident.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.AddIncident(System.String,System.Guid,System.Byte[])">
            <summary>
            Add the IcM incident.
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="incidentCorrelation">The incident correlation Id.</param>
            <param name="incidentRequest">The serialized pre-create incident request.</param>
            <returns>
            A value indicating if the operation was successful.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.UpdateIncident(System.String,System.Byte[],System.Byte[],System.Int64,System.Guid)">
            <summary>
            Update the IcM incident.
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="alertSourceIncident">The <see cref="!:AlertSourceIncident"/> Xml serialized.</param>
            <param name="resourceId">The resource Id custom serialized.</param>
            <param name="icmId">The id of the existing IcM incident.</param>
            <param name="incidentCorrelation">The incident correlation Id.</param>
            <returns>
            A value indicating if the operation was successful.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.UpdateIncident2(System.String,System.Byte[],System.Byte[],System.Int64,System.Guid,System.Boolean)">
            <summary>
            Update the IcM incident, version2.
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="alertSourceIncident">The <see cref="!:AlertSourceIncident"/> Xml serialized.</param>
            <param name="resourceId">The resource Id custom serialized.</param>
            <param name="icmId">The id of the existing IcM incident.</param>
            <param name="incidentCorrelation">The incident correlation Id.</param>
            <param name="updateIncidentOnSeverityChange">Whether this is update incident severity request</param>
            <returns>
            A value indicating if the operation was successful.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.MitigateIncident(System.String,System.Guid,System.Byte[])">
            <summary>
            Mitigate the IcM incident.
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="incidentCorrelation">The incident correlation Id.</param>
            <param name="incidentRequest">The serialized mitigate incident request.</param>
            <returns>
            A value indicating if the operation was successful.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.IncidentIsActive(System.String,System.Int64)">
            <summary>
            Check whether the incident is active.
            </summary>
            <param name="tenant">The name of the tenant.</param>
            <param name="icmId">The id of the existing IcM incident.</param>
            <returns>bool return whether the incident is active</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.ResourceHealthStatusTransition(System.Collections.Generic.List{Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest})">
            <summary>
            Request to log resource health status transition to Azure activity log
            </summary>
            <param name="requestList">The list of ResourceHealthStatusTranstion requests</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.IIncidentManagementActor.ResourceHealthAnnotation(System.Collections.Generic.List{Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest})">
            <summary>
            Request to log resource health annotation to Azure activity log
            </summary>
            <param name="requestList">The list of ResourceHealthAnnotation requests</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Actors.ITopicManagementActor">
            <summary>
            The interface of the actor processing the topics.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.ITopicManagementActor.IsListening">
            <summary>
            Get a value indicating if the Actor is currently listening to Service bus topics.
            </summary>
            <returns>
            The value indicating if the Actor is currently listening to Service bus topics.
            </returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Actors.ITopicManagementActor.ProcessTopicAsync(System.String)">
            <summary> 
            Request the actor to process the given topic. 
            </summary> 
            <param name="tenant"> 
            The tenant that is being processed. 
            </param> 
            <returns>
            The task for processing of the topic. 
            </returns> 
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest">
            <summary>
            The instance of ResourceHealthStatusTransition request
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.Resource">
            <summary>
            The serialized ResourceIdentifier
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.ResourceMetadata">
            <summary>
            The serialized MetadataCollection from ResourceMetadataCollection
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.WatchdogName">
            <summary>
            The watchdog report name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.UtcTimestampAsTick">
            <summary>
            The status transtion report time as ticks.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.PreviousHealthStatus">
            <summary>
            The previous health status that the transtion from
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.NewHealthStatus">
            <summary>
            The new health status that the transtion to
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.ArmResourceId">
            <summary>
            The ArmResourceId dimenaion value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.ArmResourceType">
            <summary>
            The configured ArmResourceType value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.ArmGeoLocation">
            <summary>
            The ArmResourceGeoLocation dimension value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.OnboardActivityLog">
            <summary>
            The queried OnboardAzureActivityLog setting in resource configuration
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.ActivityLogSubmitDelay">
            <summary>
            The time delay to submit activity log requests
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthStatusTransitionRequest.SubscriptionList">
            <summary>
            The queried SubscriptionList setting in resource configuration
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest">
            <summary>
            The instance of ResourceHealthStatusTransition request
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.Annotation">
            <summary>
            The serialized HealthAnnotation
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.ResourceMetadata">
            <summary>
            The serialized MetadataCollection from ResourceMetadataCollection
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.ArmResourceId">
            <summary>
            The ArmResourceId dimenaion value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.ArmResourceType">
            <summary>
            The configured ArmResourceType value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.ArmGeoLocation">
            <summary>
            The ArmResourceGeoLocation dimension value
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.OnboardActivityLog">
            <summary>
            The queried OnboardAzureActivityLog setting in resource configuration
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.ActivityLogSubmitDelay">
            <summary>
            The time delay to submit activity log requests
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Actors.ResourceHealthAnnotationRequest.SubscriptionList">
            <summary>
            The queried SubscriptionList setting in resource configuration
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ArgumentCheck">
            <summary>
            Helper functions for checking method arguments.
            </summary> 
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfNullOrEmpty(System.String,System.String)">
            <summary>
            Throws appropriate exception depending upon the value of <paramref name="arg"/>.
            </summary>
            <param name="arg">Argument to check.</param>
            <param name="argName">Name of the argument.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="arg"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="arg"/> is empty.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfNonExistentDirectoryPath(System.String,System.String)">
            <summary>
            Throws exception depending upon if <paramref name="path"/> exists.
            </summary>
            <param name="path">
            The path to check if it exists.
            </param>
            <param name="name">
            Name of the argument.
            </param>
            <exception cref="T:System.IO.DirectoryNotFoundException">If the path does not exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is empty.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfNonExistentFilePath(System.String,System.String)">
            <summary>
            Throws exception depending upon if <paramref name="path"/> exists.
            </summary>
            <param name="path">
            The path to check if it exists.
            </param>
            <param name="name">
            Name of the argument.
            </param>
            <exception cref="T:System.IO.FileNotFoundException">If the path does not exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is empty.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfNull(System.Object,System.String)">
            <summary>
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="arg"/> is <see langword="null"/>.
            </summary>
            <param name="arg">Argument to check.</param>
            <param name="argName">Name of the argument.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="arg"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfLessThan``1(``0,``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if <paramref name="value"/> has a value less than 
            the given <paramref name="threshold"/>.
            </summary>
            <typeparam name="T">An comparable object.</typeparam>
            <param name="value">the value to check.</param>
            <param name="threshold">the threshold.</param>
            <param name="argName">the name of the argument.</param>
            <returns>the original value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is less than <paramref name="threshold"/>.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfLessThanOrEqualTo``1(``0,``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if <paramref name="value"/> has a value less than 
            or equal to the given <paramref name="threshold"/>.
            </summary>
            <typeparam name="T">An comparable object.</typeparam>
            <param name="value">the value to check.</param>
            <param name="threshold">the threshold.</param>
            <param name="argName">the name of the argument.</param>
            <returns>the original value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is less than or equal to <paramref name="threshold"/>.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfGreaterThan``1(``0,``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if <paramref name="value"/> has a value greater than 
            to the given <paramref name="threshold"/>.
            </summary>
            <typeparam name="T">An comparable object.</typeparam>
            <param name="value">the value to check.</param>
            <param name="threshold">the threshold.</param>
            <param name="argName">the name of the argument.</param>
            <returns>the original value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is greater than to <paramref name="threshold"/>.</exception>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ArgumentCheck.ThrowIfNotInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if <paramref name="value"/> has a value lower than
            <paramref name="min"/> or greater than <paramref name="max"/>.
            </summary>
            <typeparam name="T">An comparable object.</typeparam>
            <param name="value">the value to check.</param>
            <param name="min">Minimum threshold.</param>
            <param name="max">Maximum threshold.</param>
            <param name="argName">the name of the argument.</param>
            <returns>the original value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value"/> is within the specified range.</exception>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor">
            <summary>
            This class checks the blob frequently and if blob changed then calls the virtual method 
            ProcessBlob which needs to be implemented by the derived class.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.blobClient">
            <summary>
            The blob client
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.requestOptions">
            <summary>
            RetryPolicy for interacting with the blob storage
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.timer">
            <summary>
            Timer which invokes processing of blob periodically
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.checkIntervalInMs">
            <summary>
            Periodic check interval in milliseconds
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.disposed">
            <summary>
            <see langword="true"/> if the <see cref="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.Dispose(System.Boolean)"/> method has been invoked.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.blobsToProcess">
            <summary>
            Blobs which will be processed periodically
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.lockObject">
            <summary>
            Object used for synchronizing access using locks.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,System.Int32)">
            <summary>
            Initializes a new instance of the AzureBlobProcessor class which periodically
            checks the blob and calls specified ProcessBlobMethod if the blob changed.
            </summary>
            <param name="storageAccount">the storage account</param>
            <param name="requestOptions">Blob request options</param>
            <param name="checkIntervalInSeconds">periodic check interval in seconds</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.GetBlobStreamIfChangedDelegate">
            <summary>
            Defines a delegate for retrieving blob stream only if blob changed.
            </summary>
            <param name="blobContainer">name of the container</param>
            <param name="blobName">name of the blob</param>
            <param name="previousLastModifiedUtc">previous last modified time (UTC)</param>
            <param name="streamCreated">stream is created or not. output parameter.</param>
            <param name="configXmlStream">the xml stream. output parameter.</param>
            <param name="newLastModifiedUtc">new last modified time (UTC). output parameter.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.GetBlobStreamIfChangedMethod">
            <summary>
            Gets or sets the method that can be used to get blob stream if blob changed.
            This is used for mocking azure interaction in unit-testing.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.RegisterBlob(System.String,System.String,Microsoft.Online.RecoveryService.Common.ProcessChangedBlobDelegate)">
            <summary>
            Initializes the blob.
            </summary>
            <param name="blobContainer">the blob container</param>
            <param name="blobName">the blob name</param>
            <param name="processChangedBlobMethod">the blob processing method which will be called when blob
            has changed and needs to be processed</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.ProcessBlobs(System.Object)">
            <summary>
            Processes the blobs. This is invoked by a timer.
            </summary>
            <param name="toRepeat">The state passed. Timer will pass true which will update
            the timer to call this function again. Unit-test will pass false.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.ProcessBlobIfChanged(Microsoft.Online.RecoveryService.Common.BlobProcessingData)">
            <summary>
            Processes the blob if it changed. This is invoked by a timer.
            </summary>
            <param name="blobProcessingData">The blob processing data</param>
            <returns>Updated processing data</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.Clear">
            <summary>
            Clears all the state maintained by this processor.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.Dispose">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
            <param name="disposing">
            Indicates whether this method is being invoked by <see cref="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.Dispose"/>
            (<see langword="true"/>) or a destructor (<see langword="false"/>).
            </param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobProcessor.GetBlobStreamFromAzure(System.String,System.String,System.DateTime,System.Boolean@,System.IO.Stream@,System.DateTime@)">
            <summary>
            Gets the blob stream from azure only if the blob changed.
            </summary>
            <param name="blobContainer">name of the container</param>
            <param name="blobName">name of the blob</param>
            <param name="previousLastModifiedUtc">previous last modified time (UTC)</param>
            <param name="streamCreated">stream is created or not. output parameter.</param>
            <param name="blobStream">the blob stream. output parameter.</param>
            <param name="newLastModifiedUtc">new last modified time (UTC). output parameter.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.AzureHelper">
            <summary>
            This class is intended to have common helper methods needed to operate on Azure.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureHelper.GetConnectionString(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Gets the cloud storage account connection string
            </summary>
            <param name="useDevStorage">Indicates whether the development storage is to be used or not.</param>
            <param name="storageAccountName">The storage account name to be used,
            optional when useDevStorage is true</param>
            <param name="storageAccountKey">The storage key is to be used,
            optional when useDevStorage is true. This is decrypted when encryptionKey is passed.</param>
            <param name="encryptionKey">The encryptionKey to be used for decrypting storageAccountKey,
            pass null when no encryption is to be used.</param>
            <returns>The connection string to be used.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureHelper.GetCloudStorageAccount(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Gets the cloud storage account object
            </summary>
            <param name="useDevStorage">Indicates whether the dev storage is to be used or not.</param>
            <param name="storageAccountName">The storage account name to be used,
            optional when useDevStorage is true</param>
            <param name="storageAccountKey">The storage key is to be used,
            optional when useDevStorage is true. This is decrypted when encryptionKey is passed.</param>
            <param name="encryptionKey">The encryptionKey to be used for decrypting storageAccountKey,
            pass null when no encryption is to be used.</param>
            <returns>The cloud storage account object.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureHelper.Equals(System.Nullable{System.Net.HttpStatusCode},System.Net.HttpStatusCode)">
            <summary>
            Extension method to check equality of two status codes
            </summary>
            <param name="statusCode">actual status code</param>
            <param name="statusCodeToCompare">status code to compare</param>
            <returns>true if equal, false otherwise</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager">
            <summary>
            Manager class for blob leasing.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.GenevaAlertRpLeaseContainerName">
            <summary>
            The container where blobs for resources kept.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.HasLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Check if blob already leased.
            </summary>
            <param name="blob">Blob object.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.GetLeaseId(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Get the lease id for the blob.
            </summary>
            <param name="blob">Blob object.</param>
            <returns>Lease id. (GUID)</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.ReleaseLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Remove lease on a blob.
            </summary>
            <param name="blob">Blob object.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.TryAcquireLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.Double)">
            <summary>
            Try acquiring lease on a blob.
            </summary>
            <param name="blob">Blob object.</param>
            <param name="leaseTimeInSeconds">Duration to acquire the blob for.</param>
            <returns>True if success.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.UpdateAcquiredLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.String,System.Double)">
            <summary>
            Update acquired lease on a blob.
            </summary>
            <param name="blob">Blob object</param>
            <param name="leaseId">Lease id.</param>
            <param name="lockTimeInSeconds">Duration of the lease.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.IsAcquiredLeaseMissMatched(System.String,System.String)">
            <summary>
            Is the acquired lease a mismatch?
            </summary>
            <param name="name"></param>
            <param name="leaseId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.ClearLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Clear the lease on a blob.
            </summary>
            <param name="blob"></param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.MakeLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.String,System.Double)">
            <summary>
            Make a lease object for the blob.
            </summary>
            <param name="blob">Blob object.</param>
            <param name="leaseId">Lease id.</param>
            <param name="lockTimeInSeconds">Duration for the lease.</param>
            <returns>Lease structure.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureBlobLeaseManager.RenewLease(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob)">
            <summary>
            Renew lease on the blob.
            </summary>
            <param name="blob"></param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Lease">
            <summary>
            Structure for blob lease.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.Online.RecoveryService.Common.AzureTableEncoder" -->
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureTableEncoder.Encode(System.String)">
            <summary>
            Encodes the text into an Azure-Tables safe string.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureTableEncoder.EncodeMetadata(System.String)">
            <summary>
            Encodes the text into an Azure-Tables safe string for metadata.
            <remark>
            '{]' is not allowed for metadata.
            </remark>
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureTableEncoder.Decode(System.String)">
            <summary>
            Decodes the text from an Azure-Tables safe string.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.AzureTableEncoder.DecodeMetadata(System.String)">
            <summary>
            Decodes the text from an Azure-Tables safe string for metadata.
            <remark>
            '{]' is not allowed for metadata.
            </remark>
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ProcessChangedBlobDelegate">
            <summary>
            Defines a delegate for processing changed blob. 
            </summary>
            <param name="blobStream">blob stream</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.BlobProcessingData">
            <summary>
            Class representing blob processing data.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.BlobProcessingData.BlobContainer">
            <summary>
            Gets or sets the container of the blob
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.BlobProcessingData.BlobName">
            <summary>
            Gets or sets the name of the container
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.BlobProcessingData.Processed">
            <summary>
            Gets or sets a value indicating whether the blob is processed or not
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.BlobProcessingData.LastBlobModifiedUtc">
            <summary>
            Gets or sets the last blob modified time (UTC)
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.BlobProcessingData.ProcessChangedBlobMethod">
            <summary>
            Gets or sets the method which will called to process changed blob
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.CancellationData">
            <summary>
            Class representing cancellation data.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.CancellationData.tokenSource">
            <summary>
            The cancellation token source
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.CancellationData.disposed">
            <summary>
            <see langword="true"/> if the <see cref="M:Microsoft.Online.RecoveryService.Common.CancellationData.Dispose"/> method has been invoked.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.#ctor">
            <summary>
            Initializes a new instance of the CancellationData class.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.CancellationData.Token">
            <summary>
            Gets the cancellation token
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.Refresh">
            <summary>
            Refreshes the cancellation data
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.Cancel">
            <summary>
             Initiates cancellation.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.IsCancellationRequested">
            <summary>
            Is cancellation requested?
            </summary>
            <returns>true if requested otherwise false</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.ThrowIfCancellationRequested">
            <summary>
            Throw if cancellation was requested.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.Dispose">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CancellationData.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
            <param name="disposing">
            Indicates whether this method is being invoked by <see cref="M:Microsoft.Online.RecoveryService.Common.CancellationData.Dispose"/>
            (<see langword="true"/>) or a destructor (<see langword="false"/>).
            </param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.CertHelper">
            <summary>CertHelper class</summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.EncryptBase64(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>Encrypts the string and returns a base64 encoding of it</summary>
            <param name="certificate">certificate to encrypt with</param>
            <param name="plaintext">text to encrypt</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.DecryptBase64(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>Encrypts the string and returns a base64 encoding of it</summary>
            <param name="certificate">certificate to encrypt with</param>
            <param name="cipherText">base64 encoded blob to decrypt</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.GetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.String,System.Boolean)">
            <summary>Gets a certificate given the store location and the store name</summary>
            <param name="storeLocation">store location</param>
            <param name="storeName">store name</param>
            <param name="findType">certificate find type</param>
            <param name="certId">certificate id</param>
            <returns>a certificate</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.GetCertificate(System.Security.Cryptography.X509Certificates.X509FindType,System.String)">
            <summary>Gets a certificate from LocalMachine\My store</summary>
            <param name="findType">certificate find type</param>
            <param name="certId">certificate id</param>
            <returns>a certificate</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.GetDecryptor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Gets the decryptor</summary>
            <param name="certificate">certificate to extract decryptor from</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CertHelper.GetEncryptor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Gets the encryptor</summary>
            <param name="certificate">certificate to extract encryptor from</param>
            <returns>resulting value</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ConfigurationNotLoadedException">
            <summary>
            Represents an exception that is thrown when configuration not load yet from storage.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Constants">
            <summary>Constants class</summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MinValidAzureDateTime">
            <summary>
            Minimum valid datetime which can be stored in azure table.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.Epoch">
            <summary>
            The epoch time for use in generating millis used for links of pages like dashboard.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MaxWcfStringLength">
            <summary>
            Max Wcf string length
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultReportExpirationTimeInSeconds">
            <summary>
            Default expiration time for watchdog report in seconds.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultHealthyDurationToMitigateTimeInSeconds">
            <summary>
            Default healthy duration to mitigate incident in seconds.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultHealthyCountToMitigate">
            <summary>
            Default healthy count to mitigate.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultUnknownStatusDurationForKpiInHours">
            <summary>
            Default unknown duration in hours after which KPI metrics will not be emitted for that resource.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MinIncidentCreationTimeInSeconds">
            <summary>
            Minimum incident creation time in seconds.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MinIncidentSeverity">
            <summary>
            Minimum incident severity
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MaxIncidentSeverity">
            <summary>
            Maximum incident severity
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultRecoveredIncidentSeverity">
            <summary>
            Default mitigated incident severity
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MaxNumberOfEntitesInBatchOperations">
            <summary>
            Maximum number of entities in a batch add/update operations in Azure Table Service. Current value is 100.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MaxNumberOfSubEntitesInBatchOperations">
            <summary>
            Maximum number of sub-entities in a batch add/update operations in Azure Table Service. Current value is 100.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultStringBufferSize">
            <summary>
            Default size for string buffers (StringBuilder) allocated throughout code
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.RecoveryRuleSyntaxFixRegexPattern">
            <summary>
            Regex pattern used to fix recovery rule syntax to match JScript syntax with C# indexer implementation 
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationOperationVersion5">
            <summary>
            Replication operation version. The version needs to be incremented whenever serialization of 
            any replication operation changes. The new code should handle both the existing deployed version 
            and new version.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationOperationVersion6">
            <summary>
            Replication operation version. The version needs to be incremented whenever serialization of 
            any replication operation changes. The new code should handle both the existing deployed version 
            and new version.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationOperationVersion7">
            <summary>
            Replication operation version. The version needs to be incremented whenever serialization of 
            any replication operation changes. The new code should handle both the existing deployed version 
            and new version.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationOperationVersion">
            <summary>
            Replication operation version. The version needs to be incremented whenever serialization of 
            any replication operation changes. The new code should handle both the existing deployed version 
            and new version.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultRecoveryActionRetryTimeoutInSeconds">
            <summary>
            Time after which action will not be retried and incident will be made active.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultIncidentMitigateRetryTimeoutInSeconds">
            <summary>
            Time after which incident mitigate will not be retried and incident will be deleted from the health system.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.RebootAzureRoleInstanceActionName">
            <summary>
            Name of the action that will reboot the azure role instance.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.RoleInstanceMetadataPropertyName">
            <summary>
            Role instance metadata property name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.RoleInstanceParameterName">
            <summary>
            Role instance parameter name in the reboot action.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultEnvironment">
            <summary>
            The default environment to be set if:
            1) Environment is not set at tenant settings
            2) Environment is not set at resource type level config
            3) Environment is not passed by watchdog.
            TODO: Remove after environment has become mandatory.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.IncidentActorFabricCount">
            <summary>
            IncidentActor partitions per topology.
            TODO: Should we make this configurable per tenant/topology?
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.IncidentActorFabricEndpoint">
            <summary>
            Fabric url where incident actors can be accessed.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.HealthQueryActorFabricEndpoint">
            <summary>
            Fabric url where health query actors can be accessed.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ActorIdSeparator">
            <summary>
            The separator used while generating an actors' Id in the health system.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.SecretScrubbingPattern">
            <summary>
            The string to replace the secret so they aren't sent back to client.
            <remarks>For some secrets like conneciton string, it can be used to scrub most of the characters. </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultStaleArtifactDeletionTimeInHours">
            <summary>
            Default time after which delete the stale artifacts like resources, watchdogs or actions.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultMaximumResourceCount">
            <summary>
            The default maximum number of resources.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultViewServiceTenantPartitionCount">
            <summary>
            The default maximum number of view service partitions for a tenant.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultStorageRequestTimeoutInSeconds">
            <summary>
            Default time alloted to execute storage operations before timing out.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultConnectionLimit">
            <summary>
            Default connection limit for outgoing connections
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultConnectionLimitPerClient">
            <summary>
            Default connection limit for outgoing connections per HealthClient instance
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultStorageConnectionLimit">
            <summary>
            Default connection limit for outgoing connections to storage account.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultObjectPoolCapacity">
            <summary>
            Default number of pooled objects
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultMaxReceivedMessageSizeInBytes">
            <summary>
            Default max recevied message size for WCF services
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultBatchPersistTimerCycleInSecond">
            <summary>
            Default length of time period for collecting and batching individual items before 
            batch persisting them.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogCategoryMetadataKey">
            <summary>
            Key for watchdog category in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogMessageMetadataKey">
            <summary>
            Key for watchdog message in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogSourceMetadataKey">
            <summary>
            Key for watchdog source in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogTenantMetadataKey">
            <summary>
            Key for watchdog tenant in metadata
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogComponentMetadataKey">
            <summary>
            Key for watchdog component in metadata
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogEventMetadataKey">
            <summary>
            Key for watchdog event in metadata
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogIdMetadataKey">
            <summary>
            Key for watchdog id in metadata
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogSeverityMetadataKey">
            <summary>
            Key for watchdog severity in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogReportExpirationTimeMetadataKey">
            <summary>
            Key for watchdog report expiration time in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogTitleMetadataKey">
            <summary>
            Key for watchdog title in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogRoutingIdMetadataKey">
            <summary>
            Key for watchdog routing id in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogDiagnosticsLinkMetadataKey">
            <summary>
            Key for watchdog diagnostics link in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogResourceEnvironmentMetadataKey">
            <summary>
            Key for watchdog resource environment in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogCorrelationIdMetadataKey">
            <summary>
            Key for watchdog correlation id in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogComputedReportMetadataKey">
            <summary>
            Key for watchdog computed report in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogComputedReportTypeMetadataKey">
            <summary>
            Key for watchdog computed report type in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogUnhealthyChildResourceCountMetadataKey">
            <summary>
            Key for watchdog unhealthy child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogExpiredChildResourceCountMetadataKey">
            <summary>
            Key for watchdog unknown child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogUnsuppressedChildResourceCountMetadataKey">
            <summary>
            Key for watchdog unsuppressed child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogTotalUnexpiredChildResourceCountMetadataKey">
            <summary>
            Key for watchdog total unexpired child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogTotalChildResourceCountMetadataKey">
            <summary>
            Key for watchdog total child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogChildResourceTypeMetadataKey">
            <summary>
            Key for watchdog total child resource count in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogShouldMitigateIncidentMetadataKey">
            <summary>
            Key for should mitigate incident in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogHealthyDurationToMitigateMetadataKey">
            <summary>
            Key for healthy duration to mitigate in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogHealthyCountToMitigateMetadataKey">
            <summary>
            Key for healthy count to mitigate in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogOwningAliasMetadataKey">
            <summary>
            Key for owning alias (inside icm Incident) in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogTsgIdMetadataKey">
            <summary>
            Key for tsd id (inside icm Incident)  in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogKeywordsMetadataKey">
            <summary>
            Key for keywords (inside icm Incident)  in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.IcmMetadataPrefix">
            <summary>
            Prefix for Icm fields, which will be set in AlertSourceIncident
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogIncidentTypeMetadataKey">
            <summary>
            Key for incident type (inside icm Incident)  in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogIncidentTemplateMetadataKey">
            <summary>
            Key for incident enrichment template name in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ComponentMetadataKey">
            <summary>
            Key for component (inside icm Incident)  in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ImpactedServicesMetadataKey">
            <summary>
            Key for impacted services (in IcM) in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ImpactedTeamsMetadataKey">
            <summary>
            Key for impacted teams (in IcM) in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ImpactStartDateMetadataKey">
            <summary>
            Key for impact start date (in IcM) in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ConnectorIdMetadataKey">
            <summary>
            Key for connector Id (in IcM) in metadata dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.WatchdogCategoryDefaultValue">
            <summary>
            Default for Category if no category is known
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MetricsFlushWaitTimeInSeconds">
            <summary>
            Metrics flush wait time
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.SilentMonitorKey">
            <summary>
            Metadata key for silent monitor property
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MonitorDashboardKeyPrefix">
            <summary>
            The prefix to the metadata key containing monitor dashboard information.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicatedMonitorKey">
            <summary>
            Metadata key for replicated monitor property
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MetricsMonitorSource">
            <summary>
            Metrics monitor source
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MonitorStatusWatchdogName">
            <summary>
            Monitor status watchdog name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MonitorResourceType">
            <summary>
            Monitor resource type
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultQueueCheckIntervalInMs">
            <summary>
            Default queue check interval
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultAnnotationsQueueCheckIntervalInMs">
            <summary>
            Default queue check interval for annotations
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultHealthyReportRetryTimeInSeconds">
            <summary>
            Default retry time for healthy reports. 1 min.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.DefaultUnhealthyReportRetryTimeInSeconds">
            <summary>
            Default retry time for unhealthy reports. 5 mins.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.RecoveryClientCertificateKey">
            <summary>
            Client certificate for recovery service configuration key
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationEnabledKey">
            <summary>
            Replication enabled configuration key
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ReplicationPeerAddressKey">
            <summary>
            Replication peer address configuration key
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.HealthIncidentManagementServiceAlias">
            <summary>
            Health incident management service alias used while managing incidents in IcM.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MonitorNameFilterKey">
            <summary>
            The key for the filter over the monitor name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceNameFilterKey">
            <summary>
            The key for filter over the resource name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.HealthStatusFilterKey">
            <summary>
            The key for filter over the health status.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AnyFieldFilterKey">
            <summary>
            The key for filter over all the fields.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterContainsOperator">
            <summary>
            The value for string.ContainsCI operator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterNotContainsOperator">
            <summary>
            The value for !string.ContainsCI operator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterEqualsOperator">
            <summary>
            The value for string.EqualsCI operator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterNotEqualsOperator">
            <summary>
            The value for !string.EqualsCI operator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterSuppressedResourceKey">
            <summary>
            Resource filter key for suppressed resource
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterOnlineResourceKey">
            <summary>
            Resource filter key for online resource
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterInRepairResourceKey">
            <summary>
            Resource filter key for in-repair resource
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.FilterResourceTypeKey">
            <summary>
            Resource filter key for resource type
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.HealthServiceClient">
            <summary>
            The owner for annotations updated via the health client.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AvailabilityImpactingPriorityName">
            <summary>
            The special property in the WatchdogMetadataCollection that could be used to put priority on the downtime reason in LogExtendedResourceAvailabilityImpactingEvent
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AvailabilityImpactingMetadataName">
            <summary>
            The special property in the WatchdogMetadataCollection that could be used for the downtime reason in LogExtendedResourceAvailabilityImpactingEvent
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AvailabilityImpactingAnnotationKey">
            <summary>
            The special property in the WatchdogMetadataCollection that could be used to put priority on the downtime reason in LogExtendedResourceAvailabilityImpactingEvent
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AvailabilityAnnotationTypeName">
            <summary>
            The special property in AnnotationMetadataCollection for the type of the RHC annotations.
            The value of the property is in ResourceHealthAnnotationType.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AvailabilityImpactInitiatorName">
            <summary>
            The special property in AnnotationMetadataCollection to specify the initiator of the RHC annotations.
            The value of the property is in ResourceHealthImpactInitiatorType
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ZeroArmIdString">
            <summary>
            Zero arm-id string.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ArmCompositeResourceIdDelimiter">
            <summary>
            Arm composite resource id delimiter to combine multiple resource dimension into one string.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.MaxDaysOfDataInTransitionStore">
            <summary>
            Maximum number of days of resource health data in the history/transition store.
            Currently resource health check will keep maximum 90 days of history / transition / annotation data
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AccountTransitionsBlobName">
            <summary>
            The name of the blob containing the account transition data.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AccountDailyIndexBlobName">
            <summary>
            The name of the blob containing the account raw data for the day.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AnnotationTypeMetadata">
            <summary>
            The special metadata name in annotation metadata collection.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthActorName">
            <summary>
            Special HEW actor instance name for RHC onboard Azure activity log.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType">
            <summary>
            The type of the RHC annotations. This is the value of the "AvailabilityAnnotationType" property.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.Information">
            <summary>
            The RHC annotation is for informational for the annotated resource.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.DowntimeExpected">
            <summary>
            The RHC annotation is for expected downtime for the annotated resource.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.DowntimeUnexpected">
            <summary>
            The RHC annotation is for unexpected downtime of the annotated resource.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.Diagnostics">
            <summary>
            The RHC annotation is internal only to provide extra diagnostic data.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.Rca">
            <summary>
            The RHC annotation is EG downtime RCA analysis.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthAnnotationType.Unspecified">
            <summary>
            The annotation type is not specified in the metadata collection.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthImpactInitiatorType">
            <summary>
            The initiator of the RHC annotation. This is the value of the "AvailabilityImpactInitiator" property.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthImpactInitiatorType.Platform">
            <summary>
            The RHC annotation is for platform issue.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthImpactInitiatorType.Customer">
            <summary>
            The RHC annotation is customer initiated.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.ResourceHealthImpactInitiatorType.Unspecified">
            <summary>
            The annotation type is not specified in the metadata collection.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Constants.Runner">
            <summary>
             The constants related to Health Runners.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.Runner.RunnerEnvironmentKey">
            <summary>
            The Runner environment dimension key.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.Runner.RunnerNameKey">
            <summary>
            The Runner name dimension key.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.Runner.RunnerInstanceKey">
            <summary>
            The Runner instance dimension key.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.Runner.RunnerInstanceResourceType">
            <summary>
            The Runner instance resource type.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor">
            <summary>
            Constants for Azure Monitor scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ServiceName">
            <summary>
            The service name that will be used in AzNs notifications. Not sent to customers.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.CreatedByKey">
            <summary>
            Metadata key for identifying monitors created by GenevaAlertRP.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.CreatedByValue">
            <summary>
            Metadata value set by GenevaAlerRP.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.MaxMetricsCount">
            <summary>
            Maximum number of metrics supported.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.StringSplitter">
            <summary>
            String used to concatenate metadata such as metric properties.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.MaxActiongroupCount">
            <summary>
            Maximum number of action groups supported.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.PortalUrl">
            <summary>
            Azure portal URL.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.DummyUrl">
            <summary>
            Dummy URL to use in UrlTemplate.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_UriTemplate">
            <summary>
            Template for an ARM Id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_SubscriptionIdKey">
            <summary>
            Subscription Id place holder in ARM template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_ResourceGroupNameKey">
            <summary>
            Resource group name place holder in ARM template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_ResourceProviderKey">
            <summary>
            Provider name place holder in ARM template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_ResourceTypeKey">
            <summary>
            Resource type place holder in ARM template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmId_ResourceNameKey">
            <summary>
            Resource name place holder in ARM template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmRuleIdKey">
            <summary>
            Metadata key for rule's name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.RuleNameUnknown">
            <summary>
            In case the rule name is missing. This should not happen.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ResourceTypeKey">
            <summary>
            Metadata key for ResourceType.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmResourceIdKey">
            <summary>
            Metadata key for Arm ResourceId.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ArmResourceIdUnknown">
            <summary>
            Metadata key when Arm ResourceId is missing. GenevaAlertRP should reject these calls.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.DescriptionKey">
            <summary>
            Metadata key for rule's description.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.CriteriaSchemaIdKey">
            <summary>
            Metadata key for rule's criteria schema id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.MetricKey">
            <summary>
            Metadata key for metric.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ActionGroupKey">
            <summary>
            Metadata key for action groups to notify.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.ActionGroupWebhookKey">
            <summary>
            Metadata key for action group's webhook properties.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastTemplateFile">
            <summary>
            Template file to use with AzNs.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastWebhookTemplateFile">
            <summary>
            Template file to use with AzNs.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.RuleActivated">
            <summary>
            Activated message.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.RuleDeactivated">
            <summary>
            Deactivated message.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastNotificationSource">
            <summary>
            Place holder for notification source.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastContextIdType">
            <summary>
            Place holder for context id type.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastContextId">
            <summary>
            Place holder for context id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastDescription">
            <summary>
            Place holder for description.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailTemplateId">
            <summary>
            Place holder for email template.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailTemplateLocale">
            <summary>
            Place holder for email template locale.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailTemplateFullVersion">
            <summary>
            Place holder for email template version.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastSmsText">
            <summary>
            Place holder for SMS text.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastWebhookPostBody">
            <summary>
            Place holder for webhook payload.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastActionGroupId">
            <summary>
            Place holder for action group id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastActionSourceId">
            <summary>
            Place holder for action source id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailSubject">
            <summary>
            Place holder for email subject.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailBody">
            <summary>
            Place holder for email body.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailTime">
            <summary>
            Place holder for email time.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailRuleName">
            <summary>
            Place holder for email rule name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailArmRuleId">
            <summary>
            Place holder for ARM rule id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailResourceName">
            <summary>
            Place holder for resource name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailArmResourceId">
            <summary>
            Place holder for ARM resource id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastEmailCriteria">
            <summary>
            Place holder for criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastContextIdTypeValue">
            <summary>
            The context id type used in AzNs for logging only.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastContextValue">
            <summary>
            The context id value used in AzNs for logging only.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.BroadcastDescriptionValue">
            <summary>
            The description used in AzNs for logging only.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.ActivatedEmailTemplateId">
            <summary>
            Email template id for activated alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.ActivatedEmailTemplateVersion">
            <summary>
            Email template version for activated alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.DeactivatedEmailTemplateId">
            <summary>
            Email template for deactivated alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.DeactivatedEmailTemplateVersion">
            <summary>
            Email template version for deactivate alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.EmailLocale">
            <summary>
            Email template locale.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.ActivatedSmsTemplate">
            <summary>
            SMS template for activated alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.AzNs.DeactivatedSmsTemplate">
            <summary>
            SMS template for deactivated alert.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.StatusTemplate">
            <summary>
            Place holder for status.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.TiemStampTemplate">
            <summary>
            Place holder for timestamp.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.RuleArmIdTemplate">
            <summary>
            Place holder for rule arm id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.RuleNameTemplate">
            <summary>
            Place holder for rule name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.DescriptionTemplate">
            <summary>
            Place holder for description.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ConditionTypeTemplate">
            <summary>
            Place holder for condition type.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.MetricNameTemplate">
            <summary>
            Place holder for metric name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.DimensionNameTemplate">
            <summary>
            Place holder for dimension name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.DimensionValueTemplate">
            <summary>
            Place holder for dimension name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.MetricUnitTemplate">
            <summary>
            Place holder for metric unit.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.MetricValueTemplate">
            <summary>
            Place holder metric value.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ThresholdTemplate">
            <summary>
            Place holder for threshold.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.WindowSizeTemplate">
            <summary>
            Place holder for window size.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.TimeAggregationTemplate">
            <summary>
            Place holder for time aggregation kind.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.OperatorTemplate">
            <summary>
            Place holder for operator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.SubscriptionIdTemplate">
            <summary>
            Place holder for subscription id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ResourceGroupNameTemplate">
            <summary>
            Place holder for resource group name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ResourceNameTemplate">
            <summary>
            Place holder for resource name.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ResourceTypeTemplate">
            <summary>
            Place holder for resource type.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ResourceArmIdTemplate">
            <summary>
            Place holder for resource arm id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.ResourceRegionTemplate">
            <summary>
            Place holder for resource arm id.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Constants.AzureMonitor.Webhook.PortalLinkTemplate">
            <summary>
            Place holder for portal link.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.CloudStorageItem">
            <summary>
            A real instance of cloud blob item.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CloudStorageItem.#ctor(Microsoft.WindowsAzure.Storage.Blob.IListBlobItem)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Online.RecoveryService.Common.CloudStorageItem"/>.
            </summary>
            <param name="item">The underlying storage item.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.CloudStorageItem.Item">
            <summary>
            Gets or sets the underlying storage item.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.CloudStorageItem.ListBlobs">
            <summary>
            Get the list of items if it is a directory.
            </summary>
            <returns>The <see cref="T:Microsoft.Online.RecoveryService.Common.IStorageItem"/> list.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ServiceFabricRuntime">
            <summary>
            Windows Fabric runtime abstraction.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ServiceFabricRuntime.RegisterServiceType(System.String,System.Type,Microsoft.Online.RecoveryService.Common.Logger)">
            <summary>
            Register the service.
            </summary>
            <param name="serviceTypeName">The service type name.</param>
            <param name="serviceType">The type of service.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ServiceFabricRuntime.GetHostExitEvent">
            <summary>
            Gets the host exit event.
            </summary>
            <returns>The host exit event.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ServiceFabricRuntime.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IFabricRuntime">
            <summary>
            Windows Fabric runtime abstraction.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IFabricRuntime.RegisterServiceType(System.String,System.Type,Microsoft.Online.RecoveryService.Common.Logger)">
            <summary>
            Register the service.
            </summary>
            <param name="serviceTypeName">The service type name.</param>
            <param name="serviceType">The type of service.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IFabricRuntime.GetHostExitEvent">
            <summary>
            Gets the host exit event.
            </summary>
            <returns>The host exit event.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.FabricServiceHelper">
            <summary>
            Windows Fabric service host.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.FabricServiceHelper.StampColorDimensionName">
            <summary>
            The stamp color dimension name.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FabricServiceHelper.RunFabricServiceAndPeriodicallyGcCollect(System.Type,System.String,Microsoft.Online.RecoveryService.Common.Logger,Microsoft.Online.RecoveryService.Common.IFabricRuntime,Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings)">
            <summary>
            Registers a windows fabric service and waits until fabric signals us to exit.
            Also, periodically collect Gen2 and LOH.
            </summary>
            <param name="serviceType">The type of the service to register.</param>
            <param name="serviceTypeName">The windows fabric service type name.</param>
            <param name="logger">The logger instance for the host.</param>
            <param name="runtime">The runtime abstraction.</param>
            <param name="configuration">The service configuration.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FabricServiceHelper.LogGcCollectionMetrics(System.Int64,System.String,System.String)">
            <summary>
            Submit metrics related to the service for Gc.
            </summary>
            <param name="duration">The duration for the operation.</param>
            <param name="operationName">name of the operation</param>
            <param name="serviceTypeName">The type of the serivce</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IfxClient">
            <summary>
            Ifx Client, which is a helper to submit metrics via Ifx
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.IfxClient.HealthSystemQosProxyAccountName">
            <summary>
            Health system QOS proxy account. All the metrics submitted via Ifx will be sent to this proxy account.
            MDM will then route them correctly to customer account based on "MonitoringAccount" dimension.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.IfxClient.MonitoringAccountDimension">
            <summary>
            MonitoringAccount dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.IfxClient.loggingCallback">
            <summary>
            The backing field for Property <see cref="P:Microsoft.Online.RecoveryService.Common.IfxClient.LoggingCallback" />
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetricsInternal">
            <summary>
            The delegate to submit metrics.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.IfxClient.LoggingCallback">
            <inheritdoc cref="P:Microsoft.Online.RecoveryService.Common.IIfxClient.LoggingCallback" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetricViaProxy(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetricViaProxy(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetrics(System.String,System.String,System.String,System.Int64,System.String[],System.String[],System.Nullable{System.DateTime})">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetrics(Microsoft.Cloud.InstrumentationFramework.MeasureMetric,System.Int64,System.String[],System.Nullable{System.DateTime})">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetrics(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.Validate(Microsoft.Online.Metrics.Client.Metrics)">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.Validate(Microsoft.Online.Metrics.Client.Metrics)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.Validate(Microsoft.Online.Metrics.Client.Dimensions)">
            <inheritdoc cref="M:Microsoft.Online.RecoveryService.Common.IIfxClient.Validate(Microsoft.Online.Metrics.Client.Metrics)" />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IfxClient.Log(System.UInt32,System.String,System.Boolean)">
            <summary>
            Log a message using logging channel used by the serviced tenant
            </summary>
            <param name="logId">The log ID</param>
            <param name="logString">The log content</param>
            <param name="isError">Flag indicating if it is an error message</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IfxClient.SubmitMetricsDelegate">
            <summary>
            The delegate to submit metrics.
            </summary>
            <param name="metric">The metric</param>
            <param name="value">The metric value.</param>
            <param name="dimensionValues">The dimension value, it has to be the same length of the metric.</param>
            <param name="utcTime">Time for logging.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IIfxClient">
            <summary>
            Ifx Client interface.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetricViaProxy(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Submit event via MDM proxy service
            </summary>
            <param name="tenant">Tenant name.</param>
            <param name="component">Component name.</param>
            <param name="metrics">The metrics to MDM.</param>
            <param name="dimensions">Dimensions for logging.</param>
            <param name="utcTime">Time for logging.</param>
            <param name="logZeros">A boolean indicating whether the zero value should be log or not.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Submit event to MDM
            </summary>
            <param name="tenant">Tenant name.</param>
            <param name="component">Component name.</param>
            <param name="metrics">The metrics to MDM.</param>
            <param name="dimensions">Dimensions for logging.</param>
            <param name="utcTime">Time for logging.</param>
            <param name="logZeros">A boolean indicating whether the zero value should be log or not.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(System.String,System.String,System.String,System.Int64,System.String[],System.String[],System.Nullable{System.DateTime})">
            <summary>
            Submit event to MDM
            </summary>
            <param name="tenant">Tenant name.</param>
            <param name="component">Component name.</param>
            <param name="eventId">Event id.</param>
            <param name="value">The value of the metric</param>
            <param name="dimensionNames">Dimension name list for logging.</param>
            <param name="dimensionValues">Dimension values for logging.</param>
            <param name="utcTime">Time for logging.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.SubmitMetrics(Microsoft.Cloud.InstrumentationFramework.MeasureMetric,System.Int64,System.String[],System.Nullable{System.DateTime})">
            <summary>
            Submit event to MDM
            </summary>
            <param name="metric">The metrics with name defined.</param>
            <param name="value">The value of the metric</param>
            <param name="dimensionValues">Dimension values for logging.</param>
            <param name="utcTime">Time for logging.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.Validate(Microsoft.Online.Metrics.Client.Metrics)">
            <summary>
            Validate the metrics.
            </summary>
            <param name="metrics">The metrics.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IIfxClient.Validate(Microsoft.Online.Metrics.Client.Dimensions)">
            <summary>
            Validate the dimension.
            </summary>
            <param name="dimensions">The dimensions.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.IIfxClient.LoggingCallback">
            <summary>
            Register the logging callback
            We don't know what logging mechanism tenants are using, it could be recovery service or monitoring service
            The first parameter is the logId, the second is the content to log,
            and the third parameter indicates if it is an error message.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ILogger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ILogger.Log(Microsoft.CCS.Common.Logging.TofuTagId,Microsoft.CCS.Common.Logging.LogCategory,Microsoft.CCS.Common.Logging.TofuTraceLevel,System.Object[])">
            <summary>
            Log the message for the replica instance.
            </summary>
            <param name="tagId">The tag id.</param>
            <param name="logCategory">The category of the log.</param>
            <param name="traceLevel">The level of the log.</param>
            <param name="list">The list of log parameters.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IStorageItem">
            <summary>
            Interface definition for IStorageItem
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.IStorageItem.Item">
            <summary>
            Gets or sets the underlying storage item.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IStorageItem.ListBlobs">
            <summary>
            Gets the list of <see cref="T:Microsoft.Online.RecoveryService.Common.IStorageItem"/> objects under this.
            </summary>
            <returns>The list of <see cref="T:Microsoft.Online.RecoveryService.Common.IStorageItem"/>.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.IPartitionAwareQueueManager`1">
            <summary>
            Interface definition for IPartitionAwareQueueManager
            </summary>
            <typeparam name="T">type of the item put in the queue</typeparam>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IPartitionAwareQueueManager`1.Enqueue(System.String,`0)">
            <summary>
            Enqueue the item
            </summary>
            <param name="partitionKey">partition key for the item</param>
            <param name="item">item to be put in the queue</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IPartitionAwareQueueManager`1.FlushAsync">
            <summary>
            Returns a task to flush the items in the queue
            </summary>
            <returns>the flush task</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.IPartitionAwareQueueManager`1.StopAsync(System.Boolean)">
            <summary>
            Returns a task to stop the processing of items with optional flush.
            </summary>
            <param name="flush">whether to flush the items in the queue</param>
            <returns>the stop task</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager">
            <summary>
            Implementation of feature configuration manager
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.CacheExpirationTimeInSeconds">
            <summary>
            Cache expiration time in seconds
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.FeatureConfigurationUri">
            <summary>
            Feature configuration uri
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableNotRecoverableIncidentSubmissionConfigName">
            <summary>
            Enable not recoverable incident submission config name, i.e., the incidents
            for which there are no recovery rules.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableRecoverableIncidentSubmissionConfigName">
            <summary>
            Enable recoverable incident submission config name, i.e., the incidents for which 
            there are recovery rules.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableResourceThrottlingConfigName">
            <summary>
            Enable resource throttling on tenants.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableOldMetricsSubmissionApiConfigName">
            <summary>
            Enable old metrics submission API.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableNewMetricsSubmissionApiConfigName">
            <summary>
            Enable new metrics submission API.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableMetricsSubmissionToProxyAccountConfigName">
            <summary>
            Enable metrics submission to proxy monitoring account.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableIncrementalViewModelUpdate">
            <summary>
            Enable incremental updates for view model.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.EnableNewReplicationCopyBatch">
            <summary>
            Enable incremental updates for view model.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IncludeIcmLegacyDescriptionName">
            <summary>Include icm legacy description.</summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.featureNameList">
            <summary>
            List of feature names
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.featureDefaultValueMap">
            <summary>
            Dictionary of default values of the features when feature configs are not found/present.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.fabricClient">
            <summary>
            Fabric client used to retrieve configuration
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.configurationUri">
            <summary>
            Configuration Uri
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.GetConfigurationValueMethod">
            <summary>
            GetConfigurationValueFromStoreMethod
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.configCache">
            <summary>
            Configuration cache
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.cacheExpirationInSeconds">
            <summary>
            Cache expiration in seconds
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.refreshTimer">
            <summary>
            Cache refresh timer
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.disposed">
            <summary>
            <see langword="true"/> if the <see cref="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.Dispose"/> method has been invoked.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.#ctor(System.Int32,System.Func{System.String,System.Threading.Tasks.Task{Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationValue}})">
            <summary>
            Initializes a new instance of the RecoveryServerConfigurationManager class
            </summary>
            <param name="cacheExpirationInSeconds">cache expiration in seconds. default is 300 seconds.</param>
            <param name="GetConfigurationValueMethod">the method for getting configuration value. 
            used for mocking in UTs.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IsNotRecoverableIncidentSubmissionEnabled">
            <summary>
            Is not recoverable incident submission enabled? i.e., the incidents for which
            there are no matching recovery rules.
            </summary>
            <returns>true if enabled. false otherwise</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IsRecoverableIncidentSubmissionEnabled">
            <summary>
            Is recoverable incident submission enabled? i.e., the incidents for which 
            there are matching recovery rules.
            </summary>
            <returns>true if enabled. false otherwise</returns>  
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IsResourceThrottlingEnabled">
            <summary>
            Is resource throttling enabled in the cluster.
            </summary>
            <returns>true if enabled. false otherwise</returns>  
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.UseOldMetricsSubmissionApi">
            <summary>
            Should use old metrics submission API?
            </summary>
            <returns>true if to use old submission API. false otherwise.</returns> 
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.UseNewMetricsSubmissionApi">
            <summary>
            Should use new metrics submission API?
            </summary>
            <returns>true if to use new submission API. false otherwise.</returns> 
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.ShouldSubmitMetricsToProxyAccount">
            <summary>
            Should submit metrics to proxy account?
            </summary>
            <returns>true if submit to proxy account. false otherwise.</returns> 
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IsIncrementalViewModelUpdateEnabled">
            <summary>
            Is incremental view model update enabled?
            </summary>
            <returns>true if enabled. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IsNewReplicationCopyBatchEnabled">
            <summary>
            Is new replication in copy batch enabled?
            </summary>
            <returns>true if enabled. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.IncludeIcmLegacyDescription">
            <summary>Determines if the legacy icm description should be included</summary>
            <returns>true if the legacy description should be included</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.Dispose">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
            <param name="disposing">
            Indicates whether this method is being invoked by <see cref="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.Dispose"/>
            (<see langword="true"/>) or a destructor (<see langword="false"/>).
            </param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.GetFeatureConfigValue(System.String)">
            <summary>
            Gets the value of the feature from the cache. Uses default if not present in cache.
            </summary>
            <param name="featureName">the name of the feature</param>
            <returns>the value of the feature.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.GetConfigurationValueFromFabric(System.String)">
            <summary>
            Gets configuration value from fabric store
            </summary>
            <param name="configName">name of the config</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.TimerCallback(System.Object)">
            <summary>
            The periodic timer callback
            </summary>
            <param name="stateInfo">the state info passed to the callback</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.RefreshCache">
            <summary>
            Refreshes the config cache
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.LogMetrics(System.String,System.Boolean)">
            <summary>
            Log the metrics on whether feature is enabled or not.
            </summary>
            <param name="featureName">the name of the feature</param>
            <param name="isEnabled">whether feature is enabled or not</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationManager.SetMetricSubmissionFlags">
            <summary>
            Set metric submission flags in the metrics client which indicates whether to use
            old api or new api or both.
            </summary>
            <remarks>This is only for short-term till all the metrics submission uses new API. This code will be 
            deleted after that.</remarks>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationValue">
            <summary>
            Feature configuration value class
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationValue.#ctor(System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="value">the config value</param>
            <param name="modifiedUtc">the time when the value was modified. can be null which means that the value is default.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationValue.Value">
            <summary>
            Gets the value of the config.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.Managers.FeatureConfigurationValue.ModifiedUtc">
            <summary>
            Gets the time when the value was modified. Null means that we are using default value.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager">
            <summary>
            Feature configuration manager interface
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IsNotRecoverableIncidentSubmissionEnabled">
            <summary>
            Is not recoverable incident submission enabled? i.e., the incidents for which
            there are no matching recovery rules.
            </summary>
            <returns>true if enabled. false otherwise</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IsRecoverableIncidentSubmissionEnabled">
            <summary>
            Is recoverable incident submission enabled? i.e., the incidents for which 
            there are matching recovery rules.
            </summary>
            <returns>true if enabled. false otherwise</returns>  
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IsResourceThrottlingEnabled">
            <summary>
            Is resource throttling enabled in the cluster.
            </summary>
            <returns>true if enabled. false otherwise</returns>  
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.UseOldMetricsSubmissionApi">
            <summary>
            Should use old metrics submission API?
            </summary>
            <returns>true if to use old submission API. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.UseNewMetricsSubmissionApi">
            <summary>
            Should use new metrics submission API?
            </summary>
            <returns>true if to use new submission API. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.ShouldSubmitMetricsToProxyAccount">
            <summary>
            Should submit metrics to proxy account?
            </summary>
            <returns>true if submit to proxy account. false otherwise.</returns> 
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IsIncrementalViewModelUpdateEnabled">
            <summary>
            Is incremental view model update enabled?
            </summary>
            <returns>true if enabled. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IsNewReplicationCopyBatchEnabled">
            <summary>
            Is new replication in copy batch enabled?
            </summary>
            <returns>true if enabled. false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Managers.IFeatureConfigurationManager.IncludeIcmLegacyDescription">
            <summary>Determines if the legacy icm description should be included</summary>
            <returns>true if the legacy description should be included</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.FNVHelper">
            <summary>
            FNVHelper hash generator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.FNVHelper.FnvPrime32">
            <summary>
            The constants related to generating the FNV hash.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.FNVHelper.FnvOffset32">
            <summary>
            The constants related to generating the FNV hash.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FNVHelper.To32BitFnv1AHash(System.String)">
            <summary>
            Generate the 32-bit Fnv1A hash for <paramref name="input"/> string.
            </summary>
            <param name="input">The input string.</param>
            <returns>The generated hash.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1">
            <summary>
            Concurrent queue with max fixed size
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.lockObject">
            <summary>
            Lock object to synchronize overflow item removal.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.queue">
            <summary>
            Concurrent queue
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.MaxSize">
            <summary>
            Max size of the queue
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of this object.
            </summary>
            <param name="maxSize"></param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.Enqueue(`0)">
            <summary>
            Enqueues the object. Removes overflow objects if needed.
            </summary>
            <param name="obj">the object to be enqueued</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.Any">
            <summary>
            Are their any items in the queue?
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.FixedSizeConcurrentQueue`1.TryDequeue(`0@)">
            <summary>
            Dequeues an item from the queue
            </summary>
            <param name="result">the dequeued item</param>
            <returns>true if an item was dequeued. false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.MD5Helper">
            <summary>
            Thread safe MD5Helper hash generator.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.MD5Helper.Md5Generator">
            <summary>
            Per thread random number generator used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.MD5Helper.MD5Generator">
            <summary>
            Gets per thread <see cref="T:System.Random"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.MD5Helper.GenerateHash(System.String)">
            <summary>
            Constructs a MD5 hash string from specified <paramref name="input"/>.
            </summary>
            <param name="input">The input string whose MD5 hash should be generated.</param>
            <returns>The corresponding MD5 hash.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.MD5Helper.GenerateHash(System.Byte[])">
            <summary>
            Constructs a MD5 hash string from specified <paramref name="input"/>.
            </summary>
            <param name="input">The input whose MD5 hash should be generated.</param>
            <returns>The corresponding MD5 hash.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ParallelExtensions">
            <summary>
            runs tasks in parallel with specified maxDegreeOfParallelism
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            <see cref="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task{``1}})"/>
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>Executes body in parallel, supports async/await</summary>
            <typeparam name="T">Enumerable element type</typeparam>
            <typeparam name="TResult">Return type</typeparam>
            <param name="source">Enumerable</param>
            <param name="maxDegreeOfParallelism">Max degree of parallelism</param>
            <param name="body">body to be executed</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            <see cref="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task{``1}})"/>
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.ForEachAsync``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>Executes body in parallel, supports async/await</summary>
            <typeparam name="T">Enumerable element type</typeparam>
            <typeparam name="TResult">Return type</typeparam>
            <param name="source">Enumerable</param>
            <param name="body">body to be executed</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.WhereAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Filters out the collection using async predicate</summary>
            <typeparam name="T">Enumerable element type</typeparam>
            <param name="items">Enumerable</param>
            <param name="predicate">async predicate</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>Adds cancellation support for Task.WhenAny</summary>
            <param name="tasks">Tasks to wait for</param>
            <param name="cancellation">Cancellation</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task},System.TimeSpan)">
            <summary>Adds timeout support for Task.WhenAny</summary>
            <param name="tasks">Tasks to wait for</param>
            <param name="timeout">Timeout</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ParallelExtensions.TimeoutAfter``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>
            Timeout <paramref name="task"/> after specified <paramref name="timeout"/>
            </summary>
            <typeparam name="TResult">The result type of the <paramref name="task"/></typeparam>
            <param name="task">The task to be monitored.</param>
            <param name="timeout">The timeout.</param>
            <returns>The task containing the execution results of <paramref name="task"/>.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1">
            <summary>
            Implementation of PartitionAwareQueueManager class 
            </summary>
            <typeparam name="T">type of the item put in the queue</typeparam>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.DefaultCapacityPerPartition">
            <summary>
            Default capacity of internal queue (buffer) per partition
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.DefaultMaxDegreeOfParallelism">
            <summary>
            Default max degree of parallelism
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.itemQueue">
            <summary>
            Item queue(buffer)
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.capacityPerPartition">
            <summary>
            Capacity of the internal queue (buffer) per partition
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.maxDegreeOfParallelism">
            <summary>
            Max degree of parallelism
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.timer">
            <summary>
            Worker threads to process replication requests
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.cancellationData">
            <summary>
            Cancellation data
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.checkIntervalInMs">
            <summary>
            Queue check interval in ms
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.maxBatchSize">
            <summary>
            Max size of batch which will processed at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.maxSubItemBatchSize">
            <summary>
            Max size of sub-items in the batch which will processed at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.getSubItemCountMethod">
            <summary>
             The method to get sub-item count for an item in a batch.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.itemDroppedMethod">
            <summary>
             The method which is called when the item is dropped because of capacity.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.started">
            <summary>
            Whether Start is called in this manager
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.disposed">
            <summary>
            <see langword="true"/> if the <see cref="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Dispose"/> method has been invoked.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.lockObject">
            <summary>
            Synchronization object
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Func{`0,System.Int32},System.Action{System.String,`0})">
            <summary>
            Initializes a new instance of the PartitionAwareQueueManager class
            </summary>
            <param name="capacityPerPartition">capacity of the internal buffer</param>
            <param name="maxDegreeOfParallelism">max degree of parallelism</param>
            <param name="checkIntervalInMs">check interval in ms</param>
            <param name="maxBatchSize">the size of the batch which will be passed to batch method</param>
            <param name="maxTotalSubItemBatchSize">the total number of sub-items in a batch which will be passed to batch method</param>
            <param name="getSubItemCountMethod">the method to count the sub-items for an item.</param>
            <param name="itemDroppedMethod">the method to call when item is dropped because of capacity.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.ProcessBatchMethod">
            <summary>
            Gets or sets method which will be called to process a batch with no more than
            maxBatchSize items in a given partition.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Start">
            <summary>
            Starts the timer which will start consuming the report queue.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Enqueue(System.String,`0)">
            <summary>
            Enqueue the report
            </summary>
            <param name="partitionKey">partition key</param>
            <param name="item">watchdog report</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.EnqueueInFront(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Enqueue the items in the front so that these are the first one to be removed when the queue is full.
            </summary>
            <param name="partitionKey">partition key</param>
            <param name="items">items to enqueue in front</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.FlushAsync">
            <summary>
            Flushes the items in the queue.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.StopAsync(System.Boolean)">
            <summary>
            Returns a task to stop the processing of reports and do optional flush.
            </summary>
            <param name="flush">whether to flush the items in the queue</param>
            <returns>the stop task</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Dispose">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
            <param name="disposing">
            Indicates whether this method is being invoked by <see cref="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.Dispose"/>
            (<see langword="true"/>) or a destructor (<see langword="false"/>).
            </param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.ProcessTimerCallback">
            <summary>
            Timer callback for processing items in the queue.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.ProcessAllPartitions">
            <summary>
            Processes all the partition requests in queue.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.PartitionAwareQueueManager`1.ProcessSinglePartition(System.String,System.Collections.Generic.LinkedList{`0})">
            <summary>
            Processes the items for a given partition
            </summary>
            <param name="partitionKey">partition key</param>
            <param name="items">items in the partitions</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag">
            <summary>
            Enumeration for which API to use to submit metrics
            </summary>
            <remarks>when all the stack (UX, FE, Backend) is changed to use new metrics mode, 
            old metrics method will be removed from code-base.</remarks>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag.None">
            <summary>
            No APIs
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag.UseOldApi">
            <summary>
            Use old metrics API
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag.UseNewApi">
            <summary>
            Use new metrics API (Ifx)
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag.SubmitToProxyAccount">
            <summary>
            Submit to single proxy account
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient">
            <summary>
            Metrics client for use in recovery service
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.IfxDimensionValueMaxLength">
            <summary>
            Max length of Ifx dimension values
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.HealthSystemQosProxyAccountName">
            <summary>
            Health system qos proxy account. All the metrics submitted via Ifx will be sent to this proxy account.
            MDM will then route them correctly to customer account based on "MonitoringAccount" dimension.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.RecoveryServiceTenantName">
            <summary>
            Name of tenant for recovery service in metrics system
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsTenantName">
            <summary>
            Name of tenant for metrics system's component metrics
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.RecoveryServiceComponent">
            <summary>
            Component for recovery service
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MDMInternalHealthMetricsNamespace">
            <summary>
            Namespace for MDM internal health
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MDMInternalHealthMetricsNamespaceV2">
            <summary>
            Namespace for MDM internal health v2
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MDMInternalIncidentMetricsNamespace">
            <summary>
            The namespace for MDM internal incident metrics.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ResourceEventFormat">
            <summary>
            Format of resource event.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.WatchdogEventFormat">
            <summary>
            Format of watchdog event
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ResourceChildEventFormat">
            <summary>
            Format of child resource event
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ChildHealthWatchdogEventFormat">
            <summary>
            Format of child health watchdog event
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EnabledMetric">
            <summary>
            Enabled metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DisabledMetric">
            <summary>
            Enabled metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DroppedMetric">
            <summary>
            Dropped metric 
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.SuccessMetric">
            <summary>
            Success metric 
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.FailureMetric">
            <summary>
            Failure metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.HealthyMetric">
            <summary>
            Healthy metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.UnhealthyMetric">
            <summary>
            Unhealthy metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.UnhealthyWithoutDowntimeMetric">
            <summary>
            Unhealthy resource with downtime reason annotation metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DegradedMetric">
            <summary>
            Degraded metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.UnknownMetric">
            <summary>
            Unknown health status metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.FromUnknownMetric">
            <summary>
            HealthStatusTransitonMetric to indicate a resource health status transitions from "Unknown" to other status.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ToUnknownMetric">
            <summary>
            HealthStatusTransitonMetric to indicate a resource health status transitions other status to "Unknown".
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.FromUnhealthyMetric">
            <summary>
            HealthStatusTransitonMetric to indicate a resource health status transitions from "Unhealthy" to other status.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ToUnhealthyMetric">
            <summary>
            HealthStatusTransitonMetric to indicate a resource health status transitions other status to "Unhealthy".
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.UnhealthyChildCountMetric">
            <summary>
            Unhealthy count of children metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ChildCountMetric">
            <summary>
            Total count of children metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.TimeElapsedMetric">
            <summary>
            Time elapsed metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.CacheItemCountMetric">
            <summary>
            Cache item count metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.SampleCountMetric">
            <summary>
            Sample count metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.UnhealthyResourceCountMetric">
            <summary>
            Unheathy resource count metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.TimeElapsedToGetResourcesMetric">
            <summary>
            Time elapsed to get resources from partitions metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ExtWorkerHeartBeatMetric">
            <summary>
            The heart beat for Health Ext worker.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.NumberOfResourcesMetric">
            <summary>
            Number of resources for a tenant metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.NumberOfUnhealthyResourcesMetric">
            <summary>
            Number of unhealthy resources for a tenant metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.NumberOfDegradedResourcesMetric">
            <summary>
            Number of degraded resources for a tenant metric
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ReportCountInBatchRequestMetric">
            <summary>
            Number of reports in proprietary binary serialized blob.
            Depending on the RequestType dimension, this could mean
            - Number of WatchdogReport object in the serializedr blob; or
            - Number of WatchdogReportResult object in the returned serialized blob.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.RequestReplicationMetric">
            <summary>
            Number of requests being replicated to peer datacenter because
            - The alerting from the datacenter is disabled (for example, during deployment).
            - The monitoring service from the datacenter is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MonitorDisabledMetric">
            <summary>
            Whether the monitor service from the datacenter is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.AlertingDisabledMetric">
            <summary>
             Whether the alerting is disabled from the datacenter.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EventCountMetric">
            <summary>
             The count of the events.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ReportBlobSizeMetric">
            <summary>
            The accumulated blob byte size.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MonitoringAccountDimension">
            <summary>
            MonitoringAccount dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.TenantDimension">
            <summary>
            Tenant dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.IcMEndpointDimension">
            <summary>
            Tenant dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.TenantIdDimension">
            <summary>
            TenantId dimension when there are multiple workers for a tenant.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EnvironmentDimension">
            <summary>
            Environment dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DatacenterDimension">
            <summary>
            Environment dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.RoleDimension">
            <summary>
            Role dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.RoleInstanceDimension">
            <summary>
            RoleInstance dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.HealthEnvironmentDimension">
            <summary>
            Health Environment dimension (to be used for customer metrics)
            This is to make sure that it does not conflict with any of the customer resource dimensions.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.HealthDatacenterDimension">
            <summary>
            Health Datacenter dimension (to be used for customer metrics)
            This is to make sure that it does not conflict with any of the customer resource dimensions.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.HealthRoleDimension">
            <summary>
            Health Role dimension (to be used for customer metrics)
            This is to make sure that it does not conflict with any of the customer resource dimensions.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DmsActionDimension">
            <summary>
            DMS action name as dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.AzureTableDimension">
            <summary>
            Azure table name as dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.OperationDimension">
            <summary>
            Operation dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ExpressionDimension">
            <summary>
            Expression dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MeasurementTypeDimension">
            <summary>
            MeasurementType dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.PartitionDimension">
            <summary>
            Partition dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.PartitionTypeDimension">
            <summary>
            Partition dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ResourceNameDimension">
            <summary>
            Resource name dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.WatchdogNameDimension">
            <summary>
            Watchdog name dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ServiceNameDimension">
            <summary>
            Service name dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ServicePartitionDimension">
            <summary>
            Service partition dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.CacheDimension">
            <summary>
            Cache dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.FeatureDimension">
            <summary>
            Feature dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ResourceTypeDimension">
            <summary>
            Type of resource dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ResourceGeoLocationDimension">
            <summary>
            The ARM Geo location dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DefaultGeoLocation">
            <summary>
            The default geo location dimension value stored in the metric publishing dictionary when GeoLocation is not specified in the resource identifier.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ChildResourceTypeDimension">
            <summary>
            Type of child resource dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.IncidentFailureTypeDimension">
            <summary>
            Type of incident failure dimension
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.GetOperation">
            <summary>
            Get operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.AddOrUpdateOperation">
            <summary>
            Add or update operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.AddOrUpdateBatchOperation">
            <summary>
            Add or update operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.DeleteOperation">
            <summary>
            Delete operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.BatchOperation">
            <summary>
            Batch operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.ReplicationOperation">
            <summary>
            Batch operation name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.PerfCounterEnvironmentDimensionName">
            <summary>
            The environment dimension name to be used for performance counters
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.PerfCounterDatacenterDimensionName">
            <summary>
            The datacenter dimension name to be used for performance counters
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.environmentName">
            <summary>
            Name of recovery service environment
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.datacenterName">
            <summary>
            Name of recovery service datacenter
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.roleName">
            <summary>
            The role name
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.roleInstanceName">
            <summary>
            The role instance name
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsEventDelegate">
            <summary>
            Delegate for submitting event in metrics service 
            </summary>
            <param name="component">Component name</param>
            <param name="eventId">Event ID for logging</param>
            <param name="metrics">metrics in log</param>
            <param name="dimensions">dimensions for logging</param>
            <param name="utcTime">time for logging</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsEventForTenantDelegate">
            <summary>
            Delegate for submitting event in metrics service 
            </summary>
            <param name="tenant">Tenant name</param>
            <param name="component">Component name</param>
            <param name="eventId">Event ID for logging</param>
            <param name="metrics">metrics in log</param>
            <param name="dimensions">dimensions for logging</param>
            <param name="utcTime">time for logging</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.IfxMetricsEventForTenantDelegate">
            <summary>
            Delegate for submitting event in metrics service 
            </summary>
            <param name="tenant">Tenant name</param>
            <param name="component">Component name</param>
            <param name="eventId">Event ID for logging</param>
            <param name="metrics">metrics in log</param>
            <param name="dimensions">dimensions for logging</param>
            <param name="utcTime">time for logging</param>
            <param name="logZeros">should log zero metric values? by default, zero values are not logged.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsEventConfigDelegate">
            <summary>
            Delegate for query event configuration 
            </summary>
            <param name="identifier">Event Identifier</param>
            <param name="cached">Whether to get from cache or persisted store.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsAnnotateDelegate">
            <summary>
            Delegate for submitting annotation in metrics service 
            </summary>
            <param name="tenant">Name of the tenant</param>
            <param name="component"> Name of the component </param>
            <param name="eventId"> Name of the event </param>
            <param name="annotationUtcTime">Time at which annotation need to be added/updated</param>
            <param name="annotationType">Type of annotation</param>
            <param name="dimensions"> The dimensions of the series.</param>
            <param name="annotationValue">Annotation string</param>
            <param name="retryDurationInSeconds">The retry duration.</param>
            <param name="intervalBetweenRetriesInSeconds">The interval between retries</param>
            <returns>whether annotation succeeded or not</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MonitorEventsDelegate">
            <summary>
            Delegate for getting events with monitors 
            </summary>
            <returns>null on failure; otherwise the list of event identifiers</returns>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EventMethod">
            <summary>
            Gets or sets the method that can be used to submit event to metrics service
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EventForTenantMethod">
            <summary>
            Gets or sets the method that can be used to submit event for tenants to metrics service
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.SubmitIfxMetricsMethod">
            <summary>
            Gets or sets the method that can be used to submit metrics for tenants to metrics service
            using new Ifx API.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.EventConfigMethod">
            <summary>
            Gets or sets the method that can be used to query event configuration
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.AnnotateMethod">
            <summary>
            Gets or sets the method that can be used to submit annotations to metrics service 
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MonitorEventsMethod">
            <summary>
            Gets or sets the method that can be used to get events with monitors
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricLoggingEnabled">
            <summary>
            Gets or sets a value indicating whether metrics logging is enabled
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.MetricsSubmissionFlags">
            <summary>
            Gets or sets a value indicating which method to use submit metrics
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.#cctor">
            <summary>
            Initializes the static instance of <see cref="T:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Initialize(System.String,System.String,System.String,Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag)">
            <summary>
            Initializes metrics client for recovery service
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="metricsServiceUri">Endpoint for metrics client</param>
            <param name="metricsClientCertThumbprint">Certificate thumbprint for metrics client</param>
            <param name="metricSubmissionFlags">The flags indicating which metrics submission API to call.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Initialize(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Action{System.UInt32,System.String,System.Boolean},Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag)">
            <summary>
            Initializes metrics client for recovery service 
            </summary>
            <param name="componentName">The name of the component</param>
            <param name="metricsClientCertificate">Certificate for metrics client</param>
            <param name="loggingCallBack">Log back function</param>
            <param name="metricSubmissionFlags">The flags indicating which metrics submission API to call.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Log(System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.String)">
            <summary>
            Logs data to metrics service
            </summary>
            <param name="componentName">Component of event</param>
            <param name="eventName">Name of event</param>
            <param name="metrics">Metrics of the event</param>
            <param name="dimensions">Dimensions of the event</param>
            <param name="roleOverride">Override for the default role dimension</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Log(System.String,System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.String,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Logs data to metrics service
            </summary>
            <param name="tenant">Tenant name</param>
            <param name="componentName">Component of event</param>
            <param name="eventName">Name of event</param>
            <param name="metrics">Metrics of the event</param>
            <param name="dimensions">Dimensions of the event</param>
            <param name="roleOverride">Override for the default role dimension</param>
            <param name="logZeros">should log zeros? by default, zero values are logged.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Log(System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions)">
            <summary>
            Logs data to metrics service
            </summary>
            <param name="eventName">Name of event</param>
            <param name="metrics">Metrics of the event</param>
            <param name="dimensions">Dimensions of the event</param>
            <remarks>Component is RecoveryService</remarks>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Annotate(System.String,System.String,System.String,System.DateTime,Microsoft.Online.Metrics.Common.EventConfiguration.AnnotationType,Microsoft.Online.Metrics.Client.Dimensions,System.String)">
            <summary>
            Submits the annotation to metrics service
            </summary>
            <param name="tenantName">Name of tenant</param>
            <param name="componentName">Component of event</param>
            <param name="eventName">Name of event</param>
            <param name="annotationUtcTime">Annotation time (UTC)</param>
            <param name="annotationType">Annotation type</param>
            <param name="dimensions">Dimensions of the event</param>
            <param name="annotationValue">Value of annotation</param>
            <returns>whether annotation succeeded or not</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.GetEventConfiguration(Microsoft.Online.Metrics.Common.EventConfiguration.EventIdentifier)">
            <summary>
            Helper function to get event configuration for a event Id
            </summary>
            <param name="identifier">EventIdentifier object</param>
            <returns>The configuration file mapped to the event identifier</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.GetMonitorEvents">
            <summary>
            Helper function to get list of event identifiers which have monitors.
            </summary>
            <returns>The configuration file mapped to the event identifier</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Flush">
            <summary>
            Flush the metrics
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.OnLog(System.UInt32,System.String,System.Boolean)">
            <summary>
            Call back function for metric client
            </summary>
            <param name="logId">The log ID</param>
            <param name="logString">The log content</param>
            <param name="isError">Flag indicating if it is an error message</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.SubmitIfxMetrics(System.String,System.String,System.String,Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Delegate for submitting event in metrics service 
            </summary>
            <param name="tenant">Tenant name</param>
            <param name="component">Component name</param>
            <param name="eventId">Event ID for logging</param>
            <param name="metrics">metrics in log</param>
            <param name="dimensions">dimensions for logging</param>
            <param name="utcTime">time for logging</param>
            <param name="logZeros">should log zero's? by default, zero values are not logged</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RecoveryServiceMetricClient.Initialize(System.String,Microsoft.Online.RecoveryService.Common.MetricsSubmissionFlag)">
            <summary>
            Initializes tenant, environment, log enable flag and call back.
            </summary>
            <param name="componentName">Name of the component</param>
            <param name="metricsSubmissionFlags">The flags indicating which metrics submission API to call.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ReflectionHelper.SetProperties(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Uses reflection to set propety values based on provided set of KeyValuePairs</summary>
            <param name="instance">Instance of the object to set properties to</param>
            <param name="propertiesWithValues">Property names with values to be set</param>
            <returns>Property values which were not set</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException">
            <summary>
            Replica not ready or not initialized exception.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException.#ctor(System.Guid,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException" /> class.
            </summary>
            <param name="partitionId">Partition Id.</param>
            <param name="replicaId">Replica Id.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException.PartitionId">
            <summary>
            Partition Id.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException.ReplicaId">
            <summary>
            Replica Id.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.ReplicaNotReadyException.Message">
            <summary>
            The message of the exception.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.TenantConfigurationException">
            <summary>
            Represents an exception that is thrown when a an invalid tenant configuration is encountered
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantConfigurationException.#ctor">
            <summary>
            Initializes a new instance of the TenantConfigurationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TenantConfigurationException class.
            </summary>
            <param name="message">Error message for the exception</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TenantConfigurationException class.
            </summary>
            <param name="message">Error message for the exception.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TenantConfigurationException class.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being 
            thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or 
            destination. </param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.PartitionType">
            <summary>
            The type of the service partition.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.Unknown">
            <summary>
            The partition type is not known.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.None">
            <summary>
            The partition type is none.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.Primary">
            <summary>
            The partition is a primary.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.IdleSecondary">
            <summary>
            The partition is an idle secondary.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.ActiveSecondary">
            <summary>
            The partition is an active secondary.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.PartitionType.StatelessReplica">
            <summary>
            The service is stateless.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor">
            <summary>
            The heart monitor that various stateful and stateless replicas of Health System use to indicate if the 
            replica is up and running.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.MetricsDrainTimeout">
            <summary>
            The the maximum amount of time to allow for the metrics client to drain itself.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.HeartbeatInterval">
            <summary>
            The interval between heartbeats.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.AvailabilityEventName">
            <summary>
            The name of the availability metric event.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.serviceName">
            <summary>
            The name of the service that this instance is instrumenting.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.partitionId">
            <summary>
            The name of the partition that this instance is instrumenting.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.partitionType">
            <summary>
            The type of the partition that this instance is instrumenting.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.heartbeatTimer">
            <summary>
            The heartbeat timer
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.#ctor(System.String,System.String,Microsoft.Online.RecoveryService.Common.PartitionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor"/> class.
            </summary>
            <param name="serviceName">Name of the service that is being instrumented.</param>
            <param name="partitionId">Name of the partition that is being instrumented.</param>
            <param name="partitionType">The type of the partition that is being instrumented.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.LastReplicaReconfiguration">
            <summary>
            Gets or sets the time of the last replica event.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.ServiceName">
            <summary>
            Gets or sets the name of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.PartitionName">
            <summary>
            Gets or sets the name of the partition.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.PartitionType">
            <summary>
            Gets or sets the type of the partition.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.IsPrimary">
            <summary>
            Whether this is the primary replica
            </summary>
            <returns>Whether this is the primary replica</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.Dispose(System.Boolean)">
            <summary>
            Releases managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.OnServiceStart">
            <summary>
            Called when the monitored service has successfully started.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.OnServiceStopped(System.Boolean)">
            <summary>
            Called when the monitored service has stopped.
            </summary>
            <param name="abortive">Whether or not the shutdown must complete fast.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.OnServiceRoleChange(Microsoft.Online.RecoveryService.Common.PartitionType)">
            <summary>
            Reports that the role of the replica has changed.
            </summary>
            <param name="partitionType">The new role of the replica.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.CreateHeartbeatTimer(System.Threading.TimerCallback)">
            <summary>
            Creates the heartbeat timer.
            </summary>
            <param name="timerBody">The timer body.</param>
            <returns>The heartbeat timer.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.ReportMetricEvent(Microsoft.Online.Metrics.Client.Metrics,Microsoft.Online.Metrics.Client.Dimensions)">
            <summary>
            Reports a metric event.
            </summary>
            <param name="metrics">The metrics to be written.</param>
            <param name="dimensions">The dimensions of the event.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.FlushMetrics">
            <summary>
            Flushes unsent metrics to the metrics service.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.StopHeartbeatTimer(System.Boolean)">
            <summary>
            Stops the heartbeat timer.
            </summary>
            <param name="abortive">if set to <c>true</c> [abortive].</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.HeartbeatMonitor.OnHeartBeatTimer(System.Object)">
            <summary>
            Event handler for when the timer backing the heartbeat ticks.
            </summary>
            <param name="ignored">Ignored parameter.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.TenantViewModelNotExistsException">
            <summary>
            Represents an exception that is thrown when tenant view model doesn't exist.
            Typically, this seems to happen when deployment is complete and services are starting up.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantViewModelNotExistsException.#ctor">
            <summary>
            Initializes a new instance of the TenantViewModelNotExistsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantViewModelNotExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TenantViewModelNotExistsException class.
            </summary>
            <param name="message">Error message for the exception</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantViewModelNotExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TenantViewModelNotExistsException class.
            </summary>
            <param name="message">Error message for the exception.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TenantViewModelNotExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TenantViewModelNotExistsException class.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being 
            thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or 
            destination. </param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.DataQualityException">
            <summary>
            Represents an exception that is thrown when data quality is not good.
            Typically, this seems to happen when deployment is happening or the backend replicas are moving around.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.DataQualityException.#ctor">
            <summary>
            Initializes a new instance of the DataQualityException class.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.DataQualityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataQualityException class.
            </summary>
            <param name="message">Error message for the exception</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.DataQualityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DataQualityException class.
            </summary>
            <param name="message">Error message for the exception.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.DataQualityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the DataQualityException class.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being 
            thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or 
            destination. </param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.TimerHelper">
            <summary>
            Timer helper class.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.TimerHelper.AddDeltaToTimerInterval(System.Int32,System.Int32)">
            <summary>
            Add delta time to the timer interval
            </summary>
            <param name="dueTimeInMs">timer due time in ms</param>
            <param name="deltaInSeconds">delta to add to timer in seconds</param>
            <returns>final timer interval</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.TopologyConfigIdentifierConstants">
            <summary>
            Class to hold static strings for identifying the type of config in document db
            These strings are persisted in document db. So any change in these strings should be preceeded by
            data migration in document db to make sure that data is aligned.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.WcfClient`1">
            <summary>
            A simple WCF client class that creates and closes a channel and has
            retry methods to execute methods on the channels.
            It can be overridden in unit-tests for testing purposes.
            </summary>
            <typeparam name="TChannel">The channel interface.</typeparam>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.disposed">
            <summary>
            <see langword="true"/> if the <see cref="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.Dispose"/> method has been invoked.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.endpointAddress">
            <summary>
            The endpoint address
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.channelFactory">
            <summary>
            The channel factory
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.wcfChannel">
            <summary>
            Wcf channel
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.retryCount">
            <summary>
            The retry count if remote method call fails.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.retrySleepInterval">
            <summary>
            The retry sleep interval between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.WcfClient`1.retryExceptionHandler">
            <summary>
            Should retry method
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.#ctor(System.String,System.String,System.Int32,System.TimeSpan,System.Func{System.Exception,System.Boolean},Microsoft.Online.RecoveryService.Common.CancellationData)">
            <summary>
            Initializes a new instance of the WcfClient class.
            </summary>
            <param name="endpointConfigurationName">the name of endpoint configuration.</param>
            <param name="endpointAddress">the address of endpoint</param>
            <param name="retryCount">the retry count.</param>
            <param name="retrySleepInterval">the sleep interval between retries.</param>
            <param name="retryExceptionHandler">the retry exception handler used to retry</param>
            <param name="cancellationData">cancellation data.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.WcfClient`1.GetOrCreateChannelDelegate">
            <summary>
            Delegate for add or creating channel. Used for unit-testing.
            </summary>
            <returns>the channel</returns>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.WcfClient`1.GetOrCreateChannelMethod">
            <summary>
            Gets or sets the method for getting or creating channel. Used for unit-testing.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.Dispose">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.ExecuteActionWithRetry(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            Executes the given method with retries.
            </summary>
            <param name="method">The method called on the channel</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.ExecuteFunctionWithRetry``1(System.Func{`0,System.Threading.Tasks.Task{``0}})">
            <summary>
            Calls the given function on TChannel with retries.
            </summary>
            <typeparam name="TResult">Return type of the function</typeparam>
            <param name="method">The function on TChannel.</param>
            <returns>Returned value from function execution</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.GetOrCreateChannel">
            <summary>
            Gets existing or create a new channel
            </summary>
            <returns>the channel.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.Dispose(System.Boolean)">
            <summary>
            Releases resources held by this <see cref="T:System.Object"/>.
            </summary>
            <param name="disposing">
            Indicates whether this method is being invoked by <see cref="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.Dispose"/>
            (<see langword="true"/>) or a destructor (<see langword="false"/>).
            </param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.AbortChannelIfFaulted">
            <summary>
            Aborts the client channel if the channel is in faulted state.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.WcfClient`1.CloseChannel">
            <summary>
            Closes the channel.
            </summary>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ExceptionHelper">
            <summary>
            Extension methods for exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ExceptionHelper.IsFatal(System.Exception)">
            <summary>
            Tests whether or not an exception should be re-thrown.
            </summary>
            <param name="exception">the exception to test.</param>
            <returns>a value indicating whether or not the exception is fatal and should be re-thrown.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ExceptionHelper.IsCommunicationException(System.Exception)">
            <summary>
            Tests whether or not an exception is a communication related exception
            List is based on http://msdn.microsoft.com/en-us/library/ms789039.aspx
            </summary>
            <param name="exception">the exception to test.</param>
            <returns>a value indicating whether or not the exception is a communication related exception.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ExceptionHelper.GetInnerExceptionIfAggregateException(System.Exception)">
            <summary>
            Gets the inner exception if it is aggregate exception.
            </summary>
            <param name="ex">the exception to test.</param>
            <returns>the inner exception if aggregate exception</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ExceptionHelper.IsRetryableCommunicationException(System.Exception)">
            <summary>
            Whether it is retriable communication exception or not.
            </summary>
            <param name="ex">the exception to test</param>
            <returns>true if retriable. false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.Logger">
            <summary>
            Logger class
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.heartbeatMonitor">
            <summary>
            The <see cref="P:Microsoft.Online.RecoveryService.Common.Logger.HeartbeatMonitor"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.Logger.HeartbeatMonitor">
            <summary>
            Gets the <see cref="P:Microsoft.Online.RecoveryService.Common.Logger.HeartbeatMonitor"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.Initialize">
            <summary>
            Initializes the logging for this component.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.Initialize(Microsoft.Online.RecoveryService.Common.HeartbeatMonitor)">
            <summary>
            Initialize the replica specific instance of the logger.
            </summary>
            <param name="monitor">The <see cref="P:Microsoft.Online.RecoveryService.Common.Logger.HeartbeatMonitor"/> instance.</param>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.ifxInitialized">
            <summary>
            Internal flag whether IFx is initialized.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.Logger.IfxInitialized">
            <summary>
            Determine whether IFx is initialized.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.LockObject">
            <summary>
            Local lock object to serialize IFx initialization calls.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.Logger.TraceLogger">
            <summary>
            The global logger from metrics, this is to reploace the old TofuTrace using MSODS logger.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.InitializeIfx">
            <summary>
            Initialize IFx
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.Log(Microsoft.CCS.Common.Logging.TofuTagId,Microsoft.CCS.Common.Logging.LogCategory,Microsoft.CCS.Common.Logging.TofuTraceLevel,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.Log(System.Boolean,Microsoft.CCS.Common.Logging.TofuTagId,Microsoft.CCS.Common.Logging.LogCategory,Microsoft.CCS.Common.Logging.TofuTraceLevel,System.Object[])">
            <summary>
            Log the message for the replica instance.
            </summary>
            <param name="diskLogger">Whether it should also log the entry through TFx</param>
            <param name="tagId">The tag id.</param>
            <param name="logCategory">The category of the log.</param>
            <param name="traceLevel">The level of the log.</param>
            <param name="list">The list of log parameters.</param>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.IfxArmResourceIdProperty">
            <summary>
            The special property name in WatchdogMetadataCollection to pass the ResourceId with ARM format.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.IfxIncarnationIdProperty">
            <summary>
            The special property name in WatchdogMetadataCollection to pass the incarnation id for the HeartbeatQoSEvent.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.IfxCorrelationIdProperty">
            <summary>
            The IFx CorrelationId used when IfxHesalth events were emitted from the customer services.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.IfxOnboardToResourceHealthCheck">
            <summary>
            The special property name in WatchdogMetadataCollect to determine whether the report/annotation should onboard to RHC.
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.Logger.NullStringValue">
            <summary>
            Constant string values used in IFx logging.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.GetIso8601FormattedDateTime(System.DateTime)">
            <summary>
            DO NOT MODIFY the function - copy/paste from the IFx source
            This method returns the provided DateTime formatted in the ISO 8601 format.
            </summary>
            <param name="dt">The timestamp being converted</param>
            <returns>The string representation of the timestamp</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.IsValidXmlString(System.String)">
            <summary>
            Check if the <paramref name="text"/> has any invalid Xml characters.
            </summary>
            <param name="text">The string to be verified.</param>
            <returns>A value indicating if there were any errors.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.CreateLogMessage(System.Object[])">
            <summary>
            Creates a string that contains the context - that is, the important information to log - about
            each object in <paramref name="list"/>.
            </summary>
            <param name="list">List of objects to include in the returned string, including exceptions.</param>
            <returns>String to be included in a trace log. However, returns String.</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.Append(System.Text.StringBuilder,System.Object)">
            <summary>
            Private method used by <see cref="M:Microsoft.Online.RecoveryService.Common.Logger.CreateLogMessage(System.Object[])"/>. Appends the message string for <paramref name="obj"/>
            to <paramref name="builder"/>.
            </summary>
            <param name="builder">String builder to use.</param>
            <param name="obj">Object used to create the string. If null, return without doing anything.</param>
            <remarks>An object will be logged as a string. 
            This function tries to get the string in the following order:
            1. Get the string from TofuTrace.ILogData interface.
            2. Get the string if the object is of any well-known object types.
            3. Get the string from ToString() method.
            </remarks>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.Logger.AppendExceptionInfo(System.Text.StringBuilder,System.Exception)">
            <summary>
            Appends the context string for an exception object <paramref name="e"/> to <paramref name="bld"/>.
            </summary>
            <param name="bld">String builder to use.</param>
            <param name="e">Exception used to create the string. 
            If null, this method returns without doing anything.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.RetryHelper">
            <summary>
            Helper classes to call a function multiple times it succeeds or
            retry limit is reached.
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.CallFuncWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},System.Func{System.Exception,System.Boolean},System.UInt32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Calls the specified function with retries
            </summary>
            <typeparam name="T">Return type of the function</typeparam>
            <param name="func">Function to execute</param>
            <param name="exceptionHandler">Exception handler function. If this function returns false, then 
            the exception is rethrow. Otherwise, the exception is swallowed. Exception handler is called for
            every failed attempt, even if when there are no more retry attempts remaining.</param>
            <param name="retryCount">Maximum retries</param>
            <param name="cancellationToken">cancellation token</param>
            <returns>Return value from the function</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.CallFuncWithRetry``1(System.Func{System.Threading.Tasks.Task{``0}},System.Func{System.Exception,System.Boolean},System.UInt32,System.TimeSpan,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Calls the specified function with retries
            </summary>
            <typeparam name="T">Return type of the function</typeparam>
            <param name="func">Function to execute</param>
            <param name="exceptionHandler">Exception handler function. If this function returns false, then 
            the exception is rethrow. Otherwise, the exception is swallowed. Exception handler is called for
            every failed attempt, even if when there are no more retry attempts remaining.</param>
            <param name="retryCount">Maximum retries</param>
            <param name="sleepInterval">Time to sleep between each retry</param>
            <param name="cancellationToken">cancellation token</param>
            <returns>Return value from the function</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.CallActionWithRetry(System.Func{System.Threading.Tasks.Task},System.Func{System.Exception,System.Boolean},System.UInt32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Runs the specified action with retries
            </summary>
            <param name="action">Action to execute</param>
            <param name="exceptionHandler">Exception handler function. If this function returns false, then 
            the exception is rethrow. Otherwise, the exception is swallowed. Exception handler is called for
            every failed attempt, even if when there are no more retry attempts remaining.</param>
            <param name="retryCount">Maximum retries</param>
            <param name="cancellationToken">cancellation token</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.CallActionWithRetry(System.Func{System.Threading.Tasks.Task},System.Func{System.Exception,System.Boolean},System.UInt32,System.TimeSpan,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Runs the specified action with retries
            </summary>
            <param name="action">Action to execute</param>
            <param name="exceptionHandler">Exception handler function. If this function returns false, then 
            the exception is re-thrown. Otherwise, the exception is swallowed. Exception handler is called for
            every failed attempt, even if when there are no more retry attempts remaining.</param>
            <param name="retryCount">Maximum retries</param>
            <param name="sleepInterval">Time to sleep between each retry</param>
            <param name="cancellationToken">cancellation token</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.WaitForPredicate(System.Func{System.Threading.Tasks.Task{System.Boolean}},System.TimeSpan)">
            <summary>
            Wait for predicate to be true or time out.
            </summary>
            <param name="predicate">The predicate to evaluate.</param>
            <param name="waitTime">The time to wait.</param>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.RetryHelper.WaitForPredicate(System.Func{System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Wait for predicate to be true or time out.
            </summary>
            <param name="predicate">The predicate to evaluate.</param>
            <param name="retryCount">The retry count. default is 60.</param>
            <param name="retryIntervalInMs">The retry interval. default is 1000ms.</param>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.StringHelper">
            <summary>StringHelper class</summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.StringHelper.CommaDelimiter">
            <summary>
            Comma delimiter array used with Split calls
            </summary>
        </member>
        <member name="F:Microsoft.Online.RecoveryService.Common.StringHelper.DotDelimiter">
            <summary>
            Dot delimiter array used with Split calls
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.StringHelper.TrimStringFromStartCI(System.String,System.String)">
            <summary>Trims value string from the start of the target string, in case if target starts with value (case-insensitive)</summary>
            <param name="target">target</param>
            <param name="value">string to look for</param>
            <returns>trimmed string, if value is found, otherwise - original string</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.StringHelper.ToSecureString(System.String)">
            <summary>converts a string into a SecureString</summary>
            <param name="target">string to convert</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.StringHelper.ToSecureString(System.Char[])">
            <summary>converts a character array into a SecureString</summary>
            <param name="target">string to convert</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.StringHelper.ToUnsecureString(System.Security.SecureString)">
            <summary>converts a string into a long</summary>
            <param name="target">string to convert</param>
            <returns>resulting value</returns>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.StringHelper.FormatInvariant(System.String,System.Object[])">
            <summary>
            Formats the <paramref name="target"/> using the <paramref name="args"/> 
            with <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="target">
            The format string.
            </param>
            <param name="args">
            The list of arguments.
            </param>
            <returns>
            The formatted string.
            </returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Common.ViewModelConfiguration">
            <summary>
            The representation of view model configuration
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Common.ViewModelConfiguration.PartitionCount">
            <summary>
            Gets or sets the number of view model partitions per tenant
            </summary>
        </member>
        <member name="M:Microsoft.Online.RecoveryService.Common.ViewModelConfiguration.GetViewModelConfiguration(System.Xml.XmlNode)">
            <summary>
            Gets the view model configuration under a parent xml node
            </summary>        
            <param name="parentNode">parent element in xml</param>
            <returns>view model configuration object on success, null if doesn't exist or invalid</returns>
        </member>
        <member name="T:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings">
            <summary>
            Configuration section for RecoveryServer from Settings.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableManualGcCollection">
            <summary>
            Gets a value indicating if GC collection and compaction is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.ColorToShiftOffsetForManualGc">
            <summary>
            Gets a value indicating if GC collection in red side should be shifted by an offset.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.GcTriggerPeriod">
            <summary>
            Gets the period used to trigger GC. Disabled if 0. Used for testing to know actual memory consumption.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.GcCompactionModeFrequencyInTriggerIterations">
            <summary>
            Gets the the frequency of running GC in the compaction mode.
            For example, if 5 is specified, then 1 of 5 GC's will be executed using compaction mode.
            0 will disable compaction mode.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.UseHealthStore">
            <summary>
            Gets a value indicating if health store is to be used.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableMaintenanceForRawData">
            <summary>
            Gets a value indicating if we have to enable maintenance for raw data.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableFullConsistencyCheck">
            <summary>
            Gets a value indicating if we have to load from backup storage if required.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.FixFailedBuffers">
            <summary>
            Gets a value indicating if we have to fix buffers that failed to apply during the last replica setup.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.ReloadHistoryForReentrantResources">
            <summary>
            Gets a value indicating if we will reload past history for resources that are re-entering the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.ReplicateDeletionData">
            <summary>
            Gets a value indicating if we will replicate deletion data.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableDebugLogs">
            <summary>
            Gets a value indicating if debug logs are to be emitted.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableStoreReplication">
            <summary>
            Gets a value indicating if replication is enabled for health store.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableAccountLevelWriteFlag">
            <summary>
            Gets a value indicating if account level flag is to be used for writes to store.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.EnableHistoryDataInMdm">
            <summary>
            Gets a value indicating if history data is to be stored in Mdm
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.HealthStoreCacheDurationInHours">
            <summary>
            The duration in hours to keep history in the in-memory cache.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.HealthStoreTransitionsCacheDurationInDays">
            <summary>
            The duration in days to keep transition history in the in-memory cache.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.PersistenceFrequencyInMinutes">
            <summary>
            The frequency in minutes to persist.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.DaysToPersist">
            <summary>
            The number of days after which data is purged from persisted store.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.NumStorageAccounts">
            <summary>
            The number of storage accounts across which the health store is persisted.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.BufferSize">
            <summary>
            The size of the buffer allocated for each health series data.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.DefaultTransitionsBufferSize">
            <summary>
            The default size of buffer used to store transistion data.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.CacheCleanupFrequencyInHours">
            <summary>
            The default frequency in hours to clean-up the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.BackupLoadDelayInHours">
            <summary>
            The default delay after which we will attempt to load from backup.
            </summary>
        </member>
        <member name="P:Microsoft.Online.RecoveryService.Server.Configuration.IRecoveryServerSettings.UseHealthExtService">
            <summary>
            Gets a value indicating if the incident should go extensibility service.
            </summary>
        </member>
    </members>
</doc>
